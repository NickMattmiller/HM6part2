[
	{
		"title": "Intro",
		"image": " a",
		"text": "This tutorial will demonstrate the functionality of angularjs developing client-side web pages. Angular uses a modular approach for creating reusable and maintainable code. Angular also allows for easy communication with server side code. Angular's MVC (model view controller) approach allows much of code logic to be redistributed to the client side, reducing the load placed on back-end servers. On this page, I will demonstrate an example project which I completed (essentially this web-page). "
	},
	{
		"title": "HTML page",
		"image": "html.PNG",
		"text": "First, create a basic structure html page and specify ng-app directive in the html tag. This allows angular to determine where the specific app will begin and end. (multiple apps can occur on each page)  "
	},
	{
		"title": "Controller",
		"image": "Controller.PNG",
		"text": " Controllers control which view is rendered to the dom, determining which elemenets are displayed to the end user. The tutorials controller will be in charge of everything that is rendered inside the defined area (body in this case).  "
	},
	{
		"title": "Directives",
		"image": "dirs.PNG",
		"text": " Directives are essentially markers which angular reads in order to determine DOM behavior. ng-app and ng-controller are directives. Directives can also be dynamically created, such as in the example above, which creates an array of directives for each object, which determine how to display each one. "
	},
	{
		"title": "JSON",
		"image": "json.PNG",
		"author": "Json stands for Javascript Object Notation. JSON is used similarly to XML, but instead uses angle brackets and commas. The JSON file is where the object data and attributes are stored. Angular can view this as an array and access each piece of data using four angle brackets . An object attribute is placed inside. This allows for easy integration into the DOM, but still allows the server to retain control over data. "
	}
]